[versions]
# Plugin versions
android-gradle = "8.10.0"
core-testing = "2.2.0"
junit-version = "1.1.5"
kotlin = "2.2.0"
mockito-core = "5.7.0"
mockito-inline = "5.2.0"
mockito-kotlin = "5.2.1"
protobuf = "0.9.4"
kotlin-serialization = "2.2.0"
robolectric = "4.15.1"
rules = "1.6.1"
runner = "1.6.2"
sonarqube = "6.2.0.5505"

# Dependency versions
androidx-core = "1.16.0"
androidx-appcompat = "1.7.1"
material = "1.12.0"
constraintlayout = "2.2.1"
lifecycle = "2.9.1"
activity = "1.10.1"
camerax = "1.4.2"
coroutines = "1.10.2"
okhttp = "4.12.0"
okio = "3.6.0"
kotlinx-serialization = "1.9.0"
protobuf-java = "3.25.5"
lsl = "1.16.2"
mediapipe = "0.10.8"
mlkit-pose = "18.0.0-beta5"
opencv = "4.8.0"
junit = "4.13.2"
androidx-test-ext = "1.2.1"
espresso = "3.6.1"

# Shimmer SDK versions - Now using local files, versions kept for reference
# shimmer-android = "3.0.71Beta"
# shimmer-bluetooth = "0.9.42beta"
# shimmer-driver = "0.9.138beta"

[plugins]
android-application = { id = "com.android.application", version.ref = "android-gradle" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
protobuf = { id = "com.google.protobuf", version.ref = "protobuf" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-serialization" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }

[libraries]
# AndroidX libraries
androidx-core = { module = "androidx.test:core", version.ref = "rules" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "core-testing" }
androidx-junit-v115 = { module = "androidx.test.ext:junit", version.ref = "junit-version" }
androidx-rules = { module = "androidx.test:rules", version.ref = "rules" }
androidx-runner = { module = "androidx.test:runner", version.ref = "runner" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
material = { module = "com.google.android.material:material", version.ref = "material" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "activity" }

# CameraX
androidx-camera-core = { module = "androidx.camera:camera-core", version.ref = "camerax" }
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "camerax" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camerax" }
androidx-camera-video = { module = "androidx.camera:camera-video", version.ref = "camerax" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "camerax" }
androidx-camera-extensions = { module = "androidx.camera:camera-extensions", version.ref = "camerax" }

# Coroutines
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

# Networking
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockito-core" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito-core" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito-inline" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

# Serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# Protocol Buffers
protobuf-kotlin-lite = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "protobuf-java" }
protobuf-java-util = { module = "com.google.protobuf:protobuf-java-util", version.ref = "protobuf-java" }

# Lab Streaming Layer
lsl = { module = "edu.ucsd.sccn:labstreaminglayer", version.ref = "lsl" }

# MediaPipe
mediapipe-java = { module = "com.google.mediapipe:mediapipe-java", version.ref = "mediapipe" }
mediapipe-android = { module = "com.google.mediapipe:mediapipe-android", version.ref = "mediapipe" }

# ML Kit
mlkit-pose-detection = { module = "com.google.mlkit:pose-detection", version.ref = "mlkit-pose" }
mlkit-pose-detection-accurate = { module = "com.google.mlkit:pose-detection-accurate", version.ref = "mlkit-pose" }

# OpenCV
opencv-android = { module = "org.opencv:opencv-android", version.ref = "opencv" }

# Shimmer SDK - Now using local files, library definitions kept for reference
# shimmer-android-driver = { module = "com.shimmersensing:ShimmerAndroidInstrumentDriver", version.ref = "shimmer-android" }
# shimmer-bluetooth-manager = { module = "com.shimmersensing:ShimmerBluetoothManager", version.ref = "shimmer-bluetooth" }
# shimmer-driver = { module = "com.shimmersensing:ShimmerDriver", version.ref = "shimmer-driver" }

# Testing
junit = { module = "junit:junit", version.ref = "junit" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
